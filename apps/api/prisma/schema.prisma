generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id() @default(uuid())
  name         String?
  email        String  @unique
  passwordHash String? @map("passord_hash")
  avatarUrl    String? @map("avatar_url")

  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt() @map("updated_at")
  tokens    Token[]
  deadlines Deadline[]
  Account   Account[]

  @@index([email])
  @@map("users")
}

enum TokenType {
  PASSWORD_RECOVER
}

model Token {
  id String @id() @default(uuid())

  type      TokenType
  createdAt DateTime  @default(now()) @map("created_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@map("tokens")
}

enum AccountProvider {
  GMAIL
}

model Account {
  id                String          @id @default(uuid())
  provider          AccountProvider
  providerAccountId String          @unique @map("provider_account_id")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@unique([provider, userId])
  @@map("accounts")
}

model Deadline {
  id           String   @id() @default(uuid())
  name         String?
  startDate    DateTime @map("start_date")
  dueDateInDay Int      @map("due_date_in_day")
  user         User?    @relation(fields: [userId], references: [id])
  userId       String?  @map("user_id")
  court        Court?   @relation(fields: [courtId], references: [id])
  courtId      String?  @map("court_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt() @map("updated_at")

  @@map("deadlines")
}

enum HolidayType {
  NATIONAL
  STATE
  MUNICIPAL
  OPTIONAL
}

model Holiday {
  id          String      @id() @default(uuid())
  date        DateTime
  description String?
  type        HolidayType

  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt() @map("updated_at")
  isRecurring Boolean  @default(true) @map("is_recurring")

  @@index([date])
  @@index([type])
  @@map("holidays")
}

enum CourtType {
  CONSTITUTIONAL
  SUPERIOR
  FEDERAL_REGION
  STATE_JUSTICE
  LABOR_REGION
  ELECTORAL_ZONE
  TAX_COURT
  FAMILY_DISTRICT
}

model Court {
  id      String  @id() @default(uuid())
  name    String
  address String?
  city    String
  state   String

  type     CourtType
  isActive Boolean   @default(true) @map("is_active")

  deadlines Deadline[]

  @@index([state])
  @@index([type])
  @@map("courts")
}
